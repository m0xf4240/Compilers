/* This file was generated by SableCC (http://www.sablecc.org/). */

package minijava.node;

import minijava.analysis.*;

@SuppressWarnings("nls")
public final class AExprExpr extends PExpr
{
    private PExpr10 _expr10_;

    public AExprExpr()
    {
        // Constructor
    }

    public AExprExpr(
        @SuppressWarnings("hiding") PExpr10 _expr10_)
    {
        // Constructor
        setExpr10(_expr10_);

    }

    @Override
    public Object clone()
    {
        return new AExprExpr(
            cloneNode(this._expr10_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExprExpr(this);
    }

    public PExpr10 getExpr10()
    {
        return this._expr10_;
    }

    public void setExpr10(PExpr10 node)
    {
        if(this._expr10_ != null)
        {
            this._expr10_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expr10_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expr10_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expr10_ == child)
        {
            this._expr10_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expr10_ == oldChild)
        {
            setExpr10((PExpr10) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
