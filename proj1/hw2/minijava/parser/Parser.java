/* This file was generated by SableCC (http://www.sablecc.org/). */

package minijava.parser;

import minijava.lexer.*;
import minijava.node.*;
import minijava.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    @SuppressWarnings({"unchecked"})
    private void push(int numstate, ArrayList listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AAprogram1Program */
		    {
			ArrayList list = new0();
			push(goTo(0), list, false);
		    }
		    break;
                    case 1: /* reduce AAprogram2Program */
		    {
			ArrayList list = new1();
			push(goTo(0), list, false);
		    }
		    break;
                    case 2: /* reduce AVarMaindecl */
		    {
			ArrayList list = new2();
			push(goTo(1), list, false);
		    }
		    break;
                    case 3: /* reduce AAmethodmaindecl1Maindecl */
		    {
			ArrayList list = new3();
			push(goTo(1), list, false);
		    }
		    break;
                    case 4: /* reduce AAmethodmaindecl2Maindecl */
		    {
			ArrayList list = new4();
			push(goTo(1), list, false);
		    }
		    break;
                    case 5: /* reduce AAlistparamlist1Paramlist */
		    {
			ArrayList list = new5();
			push(goTo(2), list, false);
		    }
		    break;
                    case 6: /* reduce AAlistparamlist2Paramlist */
		    {
			ArrayList list = new6();
			push(goTo(2), list, false);
		    }
		    break;
                    case 7: /* reduce AEmptyParamlist */
		    {
			ArrayList list = new7();
			push(goTo(2), list, false);
		    }
		    break;
                    case 8: /* reduce AParam */
		    {
			ArrayList list = new8();
			push(goTo(3), list, false);
		    }
		    break;
                    case 9: /* reduce APublicPrivacy */
		    {
			ArrayList list = new9();
			push(goTo(4), list, false);
		    }
		    break;
                    case 10: /* reduce ABlankPrivacy */
		    {
			ArrayList list = new10();
			push(goTo(4), list, false);
		    }
		    break;
                    case 11: /* reduce AAtype1Type */
		    {
			ArrayList list = new11();
			push(goTo(5), list, false);
		    }
		    break;
                    case 12: /* reduce AAtype2Type */
		    {
			ArrayList list = new12();
			push(goTo(5), list, false);
		    }
		    break;
                    case 13: /* reduce AWhileStmt */
		    {
			ArrayList list = new13();
			push(goTo(6), list, false);
		    }
		    break;
                    case 14: /* reduce ADeclStmt */
		    {
			ArrayList list = new14();
			push(goTo(6), list, false);
		    }
		    break;
                    case 15: /* reduce AAblockstmt1Stmt */
		    {
			ArrayList list = new15();
			push(goTo(6), list, false);
		    }
		    break;
                    case 16: /* reduce AAblockstmt2Stmt */
		    {
			ArrayList list = new16();
			push(goTo(6), list, false);
		    }
		    break;
                    case 17: /* reduce AIfStmt */
		    {
			ArrayList list = new17();
			push(goTo(6), list, false);
		    }
		    break;
                    case 18: /* reduce AExprStmt */
		    {
			ArrayList list = new18();
			push(goTo(6), list, false);
		    }
		    break;
                    case 19: /* reduce AAreturnstmt1Stmt */
		    {
			ArrayList list = new19();
			push(goTo(6), list, false);
		    }
		    break;
                    case 20: /* reduce AAreturnstmt2Stmt */
		    {
			ArrayList list = new20();
			push(goTo(6), list, false);
		    }
		    break;
                    case 21: /* reduce APrintStmt */
		    {
			ArrayList list = new21();
			push(goTo(6), list, false);
		    }
		    break;
                    case 22: /* reduce AEmptyStmt */
		    {
			ArrayList list = new22();
			push(goTo(6), list, false);
		    }
		    break;
                    case 23: /* reduce AAssignExpr */
		    {
			ArrayList list = new23();
			push(goTo(7), list, false);
		    }
		    break;
                    case 24: /* reduce AExprExpr */
		    {
			ArrayList list = new24();
			push(goTo(7), list, false);
		    }
		    break;
                    case 25: /* reduce AOrExpr10 */
		    {
			ArrayList list = new25();
			push(goTo(8), list, false);
		    }
		    break;
                    case 26: /* reduce AExprExpr10 */
		    {
			ArrayList list = new26();
			push(goTo(8), list, false);
		    }
		    break;
                    case 27: /* reduce AAndExpr20 */
		    {
			ArrayList list = new27();
			push(goTo(9), list, false);
		    }
		    break;
                    case 28: /* reduce AExprExpr20 */
		    {
			ArrayList list = new28();
			push(goTo(9), list, false);
		    }
		    break;
                    case 29: /* reduce AEqExpr30 */
		    {
			ArrayList list = new29();
			push(goTo(10), list, false);
		    }
		    break;
                    case 30: /* reduce ANeExpr30 */
		    {
			ArrayList list = new30();
			push(goTo(10), list, false);
		    }
		    break;
                    case 31: /* reduce AExprExpr30 */
		    {
			ArrayList list = new31();
			push(goTo(10), list, false);
		    }
		    break;
                    case 32: /* reduce ALtExpr40 */
		    {
			ArrayList list = new32();
			push(goTo(11), list, false);
		    }
		    break;
                    case 33: /* reduce ALeExpr40 */
		    {
			ArrayList list = new33();
			push(goTo(11), list, false);
		    }
		    break;
                    case 34: /* reduce AGeExpr40 */
		    {
			ArrayList list = new34();
			push(goTo(11), list, false);
		    }
		    break;
                    case 35: /* reduce AGtExpr40 */
		    {
			ArrayList list = new35();
			push(goTo(11), list, false);
		    }
		    break;
                    case 36: /* reduce AExprExpr40 */
		    {
			ArrayList list = new36();
			push(goTo(11), list, false);
		    }
		    break;
                    case 37: /* reduce APlusExpr50 */
		    {
			ArrayList list = new37();
			push(goTo(12), list, false);
		    }
		    break;
                    case 38: /* reduce AMinusExpr50 */
		    {
			ArrayList list = new38();
			push(goTo(12), list, false);
		    }
		    break;
                    case 39: /* reduce ATermExpr50 */
		    {
			ArrayList list = new39();
			push(goTo(12), list, false);
		    }
		    break;
                    case 40: /* reduce ATimesTerm */
		    {
			ArrayList list = new40();
			push(goTo(13), list, false);
		    }
		    break;
                    case 41: /* reduce ADivTerm */
		    {
			ArrayList list = new41();
			push(goTo(13), list, false);
		    }
		    break;
                    case 42: /* reduce AModTerm */
		    {
			ArrayList list = new42();
			push(goTo(13), list, false);
		    }
		    break;
                    case 43: /* reduce AFactorTerm */
		    {
			ArrayList list = new43();
			push(goTo(13), list, false);
		    }
		    break;
                    case 44: /* reduce APrimaryFactor */
		    {
			ArrayList list = new44();
			push(goTo(14), list, false);
		    }
		    break;
                    case 45: /* reduce AIdFactor */
		    {
			ArrayList list = new45();
			push(goTo(14), list, false);
		    }
		    break;
                    case 46: /* reduce ALengthFactor */
		    {
			ArrayList list = new46();
			push(goTo(14), list, false);
		    }
		    break;
                    case 47: /* reduce ALength2Factor */
		    {
			ArrayList list = new47();
			push(goTo(14), list, false);
		    }
		    break;
                    case 48: /* reduce AAnewarrayprimary1Primary */
		    {
			ArrayList list = new48();
			push(goTo(15), list, false);
		    }
		    break;
                    case 49: /* reduce AAnewarrayprimary2Primary */
		    {
			ArrayList list = new49();
			push(goTo(15), list, false);
		    }
		    break;
                    case 50: /* reduce APrimary2Primary */
		    {
			ArrayList list = new50();
			push(goTo(15), list, false);
		    }
		    break;
                    case 51: /* reduce AIconstPrimary2 */
		    {
			ArrayList list = new51();
			push(goTo(16), list, false);
		    }
		    break;
                    case 52: /* reduce ASconstPrimary2 */
		    {
			ArrayList list = new52();
			push(goTo(16), list, false);
		    }
		    break;
                    case 53: /* reduce ANullPrimary2 */
		    {
			ArrayList list = new53();
			push(goTo(16), list, false);
		    }
		    break;
                    case 54: /* reduce ATruePrimary2 */
		    {
			ArrayList list = new54();
			push(goTo(16), list, false);
		    }
		    break;
                    case 55: /* reduce AFalsePrimary2 */
		    {
			ArrayList list = new55();
			push(goTo(16), list, false);
		    }
		    break;
                    case 56: /* reduce AParensPrimary2 */
		    {
			ArrayList list = new56();
			push(goTo(16), list, false);
		    }
		    break;
                    case 57: /* reduce AAcallprimary21Primary2 */
		    {
			ArrayList list = new57();
			push(goTo(16), list, false);
		    }
		    break;
                    case 58: /* reduce AAcallprimary22Primary2 */
		    {
			ArrayList list = new58();
			push(goTo(16), list, false);
		    }
		    break;
                    case 59: /* reduce AArrayrefPrimary2 */
		    {
			ArrayList list = new59();
			push(goTo(16), list, false);
		    }
		    break;
                    case 60: /* reduce ANameArrayref */
		    {
			ArrayList list = new60();
			push(goTo(17), list, false);
		    }
		    break;
                    case 61: /* reduce APrimaryArrayref */
		    {
			ArrayList list = new61();
			push(goTo(17), list, false);
		    }
		    break;
                    case 62: /* reduce AIdLhs */
		    {
			ArrayList list = new62();
			push(goTo(18), list, false);
		    }
		    break;
                    case 63: /* reduce AArrayrefLhs */
		    {
			ArrayList list = new63();
			push(goTo(18), list, false);
		    }
		    break;
                    case 64: /* reduce AAlistarglist1Arglist */
		    {
			ArrayList list = new64();
			push(goTo(19), list, false);
		    }
		    break;
                    case 65: /* reduce AAlistarglist2Arglist */
		    {
			ArrayList list = new65();
			push(goTo(19), list, false);
		    }
		    break;
                    case 66: /* reduce AArg */
		    {
			ArrayList list = new66();
			push(goTo(20), list, false);
		    }
		    break;
                    case 67: /* reduce AEmptydim */
		    {
			ArrayList list = new67();
			push(goTo(21), list, false);
		    }
		    break;
                    case 68: /* reduce ATerminal$Maindecl */
		    {
			ArrayList list = new68();
			push(goTo(22), list, true);
		    }
		    break;
                    case 69: /* reduce ANonTerminal$Maindecl */
		    {
			ArrayList list = new69();
			push(goTo(22), list, true);
		    }
		    break;
                    case 70: /* reduce ATerminal$Stmt */
		    {
			ArrayList list = new70();
			push(goTo(23), list, true);
		    }
		    break;
                    case 71: /* reduce ANonTerminal$Stmt */
		    {
			ArrayList list = new71();
			push(goTo(23), list, true);
		    }
		    break;
                    case 72: /* reduce ATerminal$Param */
		    {
			ArrayList list = new72();
			push(goTo(24), list, true);
		    }
		    break;
                    case 73: /* reduce ANonTerminal$Param */
		    {
			ArrayList list = new73();
			push(goTo(24), list, true);
		    }
		    break;
                    case 74: /* reduce ATerminal$Emptydim */
		    {
			ArrayList list = new74();
			push(goTo(25), list, true);
		    }
		    break;
                    case 75: /* reduce ANonTerminal$Emptydim */
		    {
			ArrayList list = new75();
			push(goTo(25), list, true);
		    }
		    break;
                    case 76: /* reduce ATerminal$Arg */
		    {
			ArrayList list = new76();
			push(goTo(26), list, true);
		    }
		    break;
                    case 77: /* reduce ANonTerminal$Arg */
		    {
			ArrayList list = new77();
			push(goTo(26), list, true);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PProgram node1 = (PProgram) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAprogram1Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        TPublic tpublicNode2;
        TClasstok tclasstokNode3;
        TId tidNode4;
        TLbrace tlbraceNode5;
        LinkedList listNode6 = new LinkedList();
        TRbrace trbraceNode7;
        tpublicNode2 = (TPublic)nodeArrayList1.get(0);
        tclasstokNode3 = (TClasstok)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);
        tlbraceNode5 = (TLbrace)nodeArrayList4.get(0);
        {
            // Block
        }
        trbraceNode7 = (TRbrace)nodeArrayList5.get(0);

        pprogramNode1 = new AProgram(tpublicNode2, tclasstokNode3, tidNode4, tlbraceNode5, listNode6, trbraceNode7);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAprogram2Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        TPublic tpublicNode2;
        TClasstok tclasstokNode3;
        TId tidNode4;
        TLbrace tlbraceNode5;
        LinkedList listNode7 = new LinkedList();
        TRbrace trbraceNode8;
        tpublicNode2 = (TPublic)nodeArrayList1.get(0);
        tclasstokNode3 = (TClasstok)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);
        tlbraceNode5 = (TLbrace)nodeArrayList4.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        trbraceNode8 = (TRbrace)nodeArrayList6.get(0);

        pprogramNode1 = new AProgram(tpublicNode2, tclasstokNode3, tidNode4, tlbraceNode5, listNode7, trbraceNode8);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AVarMaindecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMaindecl pmaindeclNode1;
        {
            // Block
        PPrivacy pprivacyNode2;
        TStatic tstaticNode3;
        PType ptypeNode4;
        TId tidNode5;
        TSemi tsemiNode6;
        pprivacyNode2 = (PPrivacy)nodeArrayList1.get(0);
        tstaticNode3 = (TStatic)nodeArrayList2.get(0);
        ptypeNode4 = (PType)nodeArrayList3.get(0);
        tidNode5 = (TId)nodeArrayList4.get(0);
        tsemiNode6 = (TSemi)nodeArrayList5.get(0);

        pmaindeclNode1 = new AVarMaindecl(pprivacyNode2, tstaticNode3, ptypeNode4, tidNode5, tsemiNode6);
        }
	nodeList.add(pmaindeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAmethodmaindecl1Maindecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMaindecl pmaindeclNode1;
        {
            // Block
        PPrivacy pprivacyNode2;
        TStatic tstaticNode3;
        PType ptypeNode4;
        TId tidNode5;
        TLparen tlparenNode6;
        PParamlist pparamlistNode7;
        TRparen trparenNode8;
        TLbrace tlbraceNode9;
        LinkedList listNode10 = new LinkedList();
        TRbrace trbraceNode11;
        pprivacyNode2 = (PPrivacy)nodeArrayList1.get(0);
        tstaticNode3 = (TStatic)nodeArrayList2.get(0);
        ptypeNode4 = (PType)nodeArrayList3.get(0);
        tidNode5 = (TId)nodeArrayList4.get(0);
        tlparenNode6 = (TLparen)nodeArrayList5.get(0);
        pparamlistNode7 = (PParamlist)nodeArrayList6.get(0);
        trparenNode8 = (TRparen)nodeArrayList7.get(0);
        tlbraceNode9 = (TLbrace)nodeArrayList8.get(0);
        {
            // Block
        }
        trbraceNode11 = (TRbrace)nodeArrayList9.get(0);

        pmaindeclNode1 = new AMethodMaindecl(pprivacyNode2, tstaticNode3, ptypeNode4, tidNode5, tlparenNode6, pparamlistNode7, trparenNode8, tlbraceNode9, listNode10, trbraceNode11);
        }
	nodeList.add(pmaindeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AAmethodmaindecl2Maindecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMaindecl pmaindeclNode1;
        {
            // Block
        PPrivacy pprivacyNode2;
        TStatic tstaticNode3;
        PType ptypeNode4;
        TId tidNode5;
        TLparen tlparenNode6;
        PParamlist pparamlistNode7;
        TRparen trparenNode8;
        TLbrace tlbraceNode9;
        LinkedList listNode11 = new LinkedList();
        TRbrace trbraceNode12;
        pprivacyNode2 = (PPrivacy)nodeArrayList1.get(0);
        tstaticNode3 = (TStatic)nodeArrayList2.get(0);
        ptypeNode4 = (PType)nodeArrayList3.get(0);
        tidNode5 = (TId)nodeArrayList4.get(0);
        tlparenNode6 = (TLparen)nodeArrayList5.get(0);
        pparamlistNode7 = (PParamlist)nodeArrayList6.get(0);
        trparenNode8 = (TRparen)nodeArrayList7.get(0);
        tlbraceNode9 = (TLbrace)nodeArrayList8.get(0);
        {
            // Block
        LinkedList listNode10 = new LinkedList();
        listNode10 = (LinkedList)nodeArrayList9.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }
        trbraceNode12 = (TRbrace)nodeArrayList10.get(0);

        pmaindeclNode1 = new AMethodMaindecl(pprivacyNode2, tstaticNode3, ptypeNode4, tidNode5, tlparenNode6, pparamlistNode7, trparenNode8, tlbraceNode9, listNode11, trbraceNode12);
        }
	nodeList.add(pmaindeclNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AAlistparamlist1Paramlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParamlist pparamlistNode1;
        {
            // Block
        PType ptypeNode2;
        TId tidNode3;
        LinkedList listNode4 = new LinkedList();
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        {
            // Block
        }

        pparamlistNode1 = new AListParamlist(ptypeNode2, tidNode3, listNode4);
        }
	nodeList.add(pparamlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AAlistparamlist2Paramlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParamlist pparamlistNode1;
        {
            // Block
        PType ptypeNode2;
        TId tidNode3;
        LinkedList listNode5 = new LinkedList();
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pparamlistNode1 = new AListParamlist(ptypeNode2, tidNode3, listNode5);
        }
	nodeList.add(pparamlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AEmptyParamlist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PParamlist pparamlistNode1;
        {
            // Block

        pparamlistNode1 = new AEmptyParamlist();
        }
	nodeList.add(pparamlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AParam */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParam pparamNode1;
        {
            // Block
        TComma tcommaNode2;
        PType ptypeNode3;
        TId tidNode4;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        ptypeNode3 = (PType)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);

        pparamNode1 = new AParam(tcommaNode2, ptypeNode3, tidNode4);
        }
	nodeList.add(pparamNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce APublicPrivacy */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrivacy pprivacyNode1;
        {
            // Block
        TPublic tpublicNode2;
        tpublicNode2 = (TPublic)nodeArrayList1.get(0);

        pprivacyNode1 = new APublicPrivacy(tpublicNode2);
        }
	nodeList.add(pprivacyNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce ABlankPrivacy */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PPrivacy pprivacyNode1;
        {
            // Block

        pprivacyNode1 = new ABlankPrivacy();
        }
	nodeList.add(pprivacyNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AAtype1Type */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TId tidNode2;
        LinkedList listNode3 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        }

        ptypeNode1 = new AType(tidNode2, listNode3);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce AAtype2Type */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TId tidNode2;
        LinkedList listNode4 = new LinkedList();
        tidNode2 = (TId)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptypeNode1 = new AType(tidNode2, listNode4);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AWhileStmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        TWhile twhileNode2;
        TLparen tlparenNode3;
        PExpr pexprNode4;
        TRparen trparenNode5;
        PStmt pstmtNode6;
        twhileNode2 = (TWhile)nodeArrayList1.get(0);
        tlparenNode3 = (TLparen)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        trparenNode5 = (TRparen)nodeArrayList4.get(0);
        pstmtNode6 = (PStmt)nodeArrayList5.get(0);

        pstmtNode1 = new AWhileStmt(twhileNode2, tlparenNode3, pexprNode4, trparenNode5, pstmtNode6);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce ADeclStmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PType ptypeNode2;
        TId tidNode3;
        TSemi tsemiNode4;
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tsemiNode4 = (TSemi)nodeArrayList3.get(0);

        pstmtNode1 = new ADeclStmt(ptypeNode2, tidNode3, tsemiNode4);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AAblockstmt1Stmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        TLbrace tlbraceNode2;
        LinkedList listNode3 = new LinkedList();
        TRbrace trbraceNode4;
        tlbraceNode2 = (TLbrace)nodeArrayList1.get(0);
        {
            // Block
        }
        trbraceNode4 = (TRbrace)nodeArrayList2.get(0);

        pstmtNode1 = new ABlockStmt(tlbraceNode2, listNode3, trbraceNode4);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AAblockstmt2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        TLbrace tlbraceNode2;
        LinkedList listNode4 = new LinkedList();
        TRbrace trbraceNode5;
        tlbraceNode2 = (TLbrace)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        trbraceNode5 = (TRbrace)nodeArrayList3.get(0);

        pstmtNode1 = new ABlockStmt(tlbraceNode2, listNode4, trbraceNode5);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AIfStmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        TIf tifNode2;
        TLparen tlparenNode3;
        PExpr pexprNode4;
        TRparen trparenNode5;
        PStmt pstmtNode6;
        TElse telseNode7;
        PStmt pstmtNode8;
        tifNode2 = (TIf)nodeArrayList1.get(0);
        tlparenNode3 = (TLparen)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        trparenNode5 = (TRparen)nodeArrayList4.get(0);
        pstmtNode6 = (PStmt)nodeArrayList5.get(0);
        telseNode7 = (TElse)nodeArrayList6.get(0);
        pstmtNode8 = (PStmt)nodeArrayList7.get(0);

        pstmtNode1 = new AIfStmt(tifNode2, tlparenNode3, pexprNode4, trparenNode5, pstmtNode6, telseNode7, pstmtNode8);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AExprStmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        PExpr pexprNode2;
        TSemi tsemiNode3;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        tsemiNode3 = (TSemi)nodeArrayList2.get(0);

        pstmtNode1 = new AExprStmt(pexprNode2, tsemiNode3);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AAreturnstmt1Stmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        TReturn treturnNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TSemi tsemiNode4;
        treturnNode2 = (TReturn)nodeArrayList1.get(0);
        tsemiNode4 = (TSemi)nodeArrayList2.get(0);

        pstmtNode1 = new AReturnStmt(treturnNode2, null, tsemiNode4);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce AAreturnstmt2Stmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        TReturn treturnNode2;
        PExpr pexprNode3;
        TSemi tsemiNode4;
        treturnNode2 = (TReturn)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        tsemiNode4 = (TSemi)nodeArrayList3.get(0);

        pstmtNode1 = new AReturnStmt(treturnNode2, pexprNode3, tsemiNode4);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce APrintStmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        TPrint tprintNode2;
        TLparen tlparenNode3;
        PExpr pexprNode4;
        TRparen trparenNode5;
        TSemi tsemiNode6;
        tprintNode2 = (TPrint)nodeArrayList1.get(0);
        tlparenNode3 = (TLparen)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        trparenNode5 = (TRparen)nodeArrayList4.get(0);
        tsemiNode6 = (TSemi)nodeArrayList5.get(0);

        pstmtNode1 = new APrintStmt(tprintNode2, tlparenNode3, pexprNode4, trparenNode5, tsemiNode6);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AEmptyStmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStmt pstmtNode1;
        {
            // Block
        TSemi tsemiNode2;
        tsemiNode2 = (TSemi)nodeArrayList1.get(0);

        pstmtNode1 = new AEmptyStmt(tsemiNode2);
        }
	nodeList.add(pstmtNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AAssignExpr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PLhs plhsNode2;
        TAssign tassignNode3;
        PExpr pexprNode4;
        plhsNode2 = (PLhs)nodeArrayList1.get(0);
        tassignNode3 = (TAssign)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);

        pexprNode1 = new AAssignExpr(plhsNode2, tassignNode3, pexprNode4);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AExprExpr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PExpr10 pexpr10Node2;
        pexpr10Node2 = (PExpr10)nodeArrayList1.get(0);

        pexprNode1 = new AExprExpr(pexpr10Node2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AOrExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr10 pexpr10Node1;
        {
            // Block
        PExpr10 pexpr10Node2;
        TOr torNode3;
        PExpr20 pexpr20Node4;
        pexpr10Node2 = (PExpr10)nodeArrayList1.get(0);
        torNode3 = (TOr)nodeArrayList2.get(0);
        pexpr20Node4 = (PExpr20)nodeArrayList3.get(0);

        pexpr10Node1 = new AOrExpr10(pexpr10Node2, torNode3, pexpr20Node4);
        }
	nodeList.add(pexpr10Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AExprExpr10 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr10 pexpr10Node1;
        {
            // Block
        PExpr20 pexpr20Node2;
        pexpr20Node2 = (PExpr20)nodeArrayList1.get(0);

        pexpr10Node1 = new AExprExpr10(pexpr20Node2);
        }
	nodeList.add(pexpr10Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AAndExpr20 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr20 pexpr20Node1;
        {
            // Block
        PExpr20 pexpr20Node2;
        TAnd tandNode3;
        PExpr30 pexpr30Node4;
        pexpr20Node2 = (PExpr20)nodeArrayList1.get(0);
        tandNode3 = (TAnd)nodeArrayList2.get(0);
        pexpr30Node4 = (PExpr30)nodeArrayList3.get(0);

        pexpr20Node1 = new AAndExpr20(pexpr20Node2, tandNode3, pexpr30Node4);
        }
	nodeList.add(pexpr20Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AExprExpr20 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr20 pexpr20Node1;
        {
            // Block
        PExpr30 pexpr30Node2;
        pexpr30Node2 = (PExpr30)nodeArrayList1.get(0);

        pexpr20Node1 = new AExprExpr20(pexpr30Node2);
        }
	nodeList.add(pexpr20Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce AEqExpr30 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr30 pexpr30Node1;
        {
            // Block
        PExpr30 pexpr30Node2;
        TEq teqNode3;
        PExpr40 pexpr40Node4;
        pexpr30Node2 = (PExpr30)nodeArrayList1.get(0);
        teqNode3 = (TEq)nodeArrayList2.get(0);
        pexpr40Node4 = (PExpr40)nodeArrayList3.get(0);

        pexpr30Node1 = new AEqExpr30(pexpr30Node2, teqNode3, pexpr40Node4);
        }
	nodeList.add(pexpr30Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce ANeExpr30 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr30 pexpr30Node1;
        {
            // Block
        PExpr30 pexpr30Node2;
        TNe tneNode3;
        PExpr40 pexpr40Node4;
        pexpr30Node2 = (PExpr30)nodeArrayList1.get(0);
        tneNode3 = (TNe)nodeArrayList2.get(0);
        pexpr40Node4 = (PExpr40)nodeArrayList3.get(0);

        pexpr30Node1 = new ANeExpr30(pexpr30Node2, tneNode3, pexpr40Node4);
        }
	nodeList.add(pexpr30Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce AExprExpr30 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr30 pexpr30Node1;
        {
            // Block
        PExpr40 pexpr40Node2;
        pexpr40Node2 = (PExpr40)nodeArrayList1.get(0);

        pexpr30Node1 = new AExprExpr30(pexpr40Node2);
        }
	nodeList.add(pexpr30Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce ALtExpr40 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr40 pexpr40Node1;
        {
            // Block
        PExpr40 pexpr40Node2;
        TLt tltNode3;
        PExpr50 pexpr50Node4;
        pexpr40Node2 = (PExpr40)nodeArrayList1.get(0);
        tltNode3 = (TLt)nodeArrayList2.get(0);
        pexpr50Node4 = (PExpr50)nodeArrayList3.get(0);

        pexpr40Node1 = new ALtExpr40(pexpr40Node2, tltNode3, pexpr50Node4);
        }
	nodeList.add(pexpr40Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce ALeExpr40 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr40 pexpr40Node1;
        {
            // Block
        PExpr40 pexpr40Node2;
        TLe tleNode3;
        PExpr50 pexpr50Node4;
        pexpr40Node2 = (PExpr40)nodeArrayList1.get(0);
        tleNode3 = (TLe)nodeArrayList2.get(0);
        pexpr50Node4 = (PExpr50)nodeArrayList3.get(0);

        pexpr40Node1 = new ALeExpr40(pexpr40Node2, tleNode3, pexpr50Node4);
        }
	nodeList.add(pexpr40Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce AGeExpr40 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr40 pexpr40Node1;
        {
            // Block
        PExpr40 pexpr40Node2;
        TGe tgeNode3;
        PExpr50 pexpr50Node4;
        pexpr40Node2 = (PExpr40)nodeArrayList1.get(0);
        tgeNode3 = (TGe)nodeArrayList2.get(0);
        pexpr50Node4 = (PExpr50)nodeArrayList3.get(0);

        pexpr40Node1 = new AGeExpr40(pexpr40Node2, tgeNode3, pexpr50Node4);
        }
	nodeList.add(pexpr40Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce AGtExpr40 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr40 pexpr40Node1;
        {
            // Block
        PExpr40 pexpr40Node2;
        TGt tgtNode3;
        PExpr50 pexpr50Node4;
        pexpr40Node2 = (PExpr40)nodeArrayList1.get(0);
        tgtNode3 = (TGt)nodeArrayList2.get(0);
        pexpr50Node4 = (PExpr50)nodeArrayList3.get(0);

        pexpr40Node1 = new AGtExpr40(pexpr40Node2, tgtNode3, pexpr50Node4);
        }
	nodeList.add(pexpr40Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce AExprExpr40 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr40 pexpr40Node1;
        {
            // Block
        PExpr50 pexpr50Node2;
        pexpr50Node2 = (PExpr50)nodeArrayList1.get(0);

        pexpr40Node1 = new AExprExpr40(pexpr50Node2);
        }
	nodeList.add(pexpr40Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce APlusExpr50 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr50 pexpr50Node1;
        {
            // Block
        PExpr50 pexpr50Node2;
        TPlus tplusNode3;
        PTerm ptermNode4;
        pexpr50Node2 = (PExpr50)nodeArrayList1.get(0);
        tplusNode3 = (TPlus)nodeArrayList2.get(0);
        ptermNode4 = (PTerm)nodeArrayList3.get(0);

        pexpr50Node1 = new APlusExpr50(pexpr50Node2, tplusNode3, ptermNode4);
        }
	nodeList.add(pexpr50Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce AMinusExpr50 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr50 pexpr50Node1;
        {
            // Block
        PExpr50 pexpr50Node2;
        TMinus tminusNode3;
        PTerm ptermNode4;
        pexpr50Node2 = (PExpr50)nodeArrayList1.get(0);
        tminusNode3 = (TMinus)nodeArrayList2.get(0);
        ptermNode4 = (PTerm)nodeArrayList3.get(0);

        pexpr50Node1 = new AMinusExpr50(pexpr50Node2, tminusNode3, ptermNode4);
        }
	nodeList.add(pexpr50Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce ATermExpr50 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr50 pexpr50Node1;
        {
            // Block
        PTerm ptermNode2;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);

        pexpr50Node1 = new ATermExpr50(ptermNode2);
        }
	nodeList.add(pexpr50Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce ATimesTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        PTerm ptermNode2;
        TTimes ttimesNode3;
        PFactor pfactorNode4;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        ttimesNode3 = (TTimes)nodeArrayList2.get(0);
        pfactorNode4 = (PFactor)nodeArrayList3.get(0);

        ptermNode1 = new ATimesTerm(ptermNode2, ttimesNode3, pfactorNode4);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce ADivTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        PTerm ptermNode2;
        TDiv tdivNode3;
        PFactor pfactorNode4;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        pfactorNode4 = (PFactor)nodeArrayList3.get(0);

        ptermNode1 = new ADivTerm(ptermNode2, tdivNode3, pfactorNode4);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce AModTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        PTerm ptermNode2;
        TMod tmodNode3;
        PFactor pfactorNode4;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        tmodNode3 = (TMod)nodeArrayList2.get(0);
        pfactorNode4 = (PFactor)nodeArrayList3.get(0);

        ptermNode1 = new AModTerm(ptermNode2, tmodNode3, pfactorNode4);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce AFactorTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        PFactor pfactorNode2;
        pfactorNode2 = (PFactor)nodeArrayList1.get(0);

        ptermNode1 = new AFactorTerm(pfactorNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce APrimaryFactor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFactor pfactorNode1;
        {
            // Block
        PPrimary pprimaryNode2;
        pprimaryNode2 = (PPrimary)nodeArrayList1.get(0);

        pfactorNode1 = new APrimaryFactor(pprimaryNode2);
        }
	nodeList.add(pfactorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce AIdFactor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFactor pfactorNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pfactorNode1 = new AIdFactor(tidNode2);
        }
	nodeList.add(pfactorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce ALengthFactor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFactor pfactorNode1;
        {
            // Block
        TId tidNode2;
        TDot tdotNode3;
        TLength tlengthNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        tlengthNode4 = (TLength)nodeArrayList3.get(0);

        pfactorNode1 = new ALengthFactor(tidNode2, tdotNode3, tlengthNode4);
        }
	nodeList.add(pfactorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce ALength2Factor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFactor pfactorNode1;
        {
            // Block
        TId tidNode2;
        TDot tdotNode3;
        TLength tlengthNode4;
        TLparen tlparenNode5;
        TRparen trparenNode6;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        tlengthNode4 = (TLength)nodeArrayList3.get(0);
        tlparenNode5 = (TLparen)nodeArrayList4.get(0);
        trparenNode6 = (TRparen)nodeArrayList5.get(0);

        pfactorNode1 = new ALength2Factor(tidNode2, tdotNode3, tlengthNode4, tlparenNode5, trparenNode6);
        }
	nodeList.add(pfactorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce AAnewarrayprimary1Primary */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary pprimaryNode1;
        {
            // Block
        TNew tnewNode2;
        TId tidNode3;
        TLbrack tlbrackNode4;
        PExpr pexprNode5;
        TRbrack trbrackNode6;
        LinkedList listNode7 = new LinkedList();
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tlbrackNode4 = (TLbrack)nodeArrayList3.get(0);
        pexprNode5 = (PExpr)nodeArrayList4.get(0);
        trbrackNode6 = (TRbrack)nodeArrayList5.get(0);
        {
            // Block
        }

        pprimaryNode1 = new ANewarrayPrimary(tnewNode2, tidNode3, tlbrackNode4, pexprNode5, trbrackNode6, listNode7);
        }
	nodeList.add(pprimaryNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce AAnewarrayprimary2Primary */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary pprimaryNode1;
        {
            // Block
        TNew tnewNode2;
        TId tidNode3;
        TLbrack tlbrackNode4;
        PExpr pexprNode5;
        TRbrack trbrackNode6;
        LinkedList listNode8 = new LinkedList();
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tlbrackNode4 = (TLbrack)nodeArrayList3.get(0);
        pexprNode5 = (PExpr)nodeArrayList4.get(0);
        trbrackNode6 = (TRbrack)nodeArrayList5.get(0);
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList6.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pprimaryNode1 = new ANewarrayPrimary(tnewNode2, tidNode3, tlbrackNode4, pexprNode5, trbrackNode6, listNode8);
        }
	nodeList.add(pprimaryNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce APrimary2Primary */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary pprimaryNode1;
        {
            // Block
        PPrimary2 pprimary2Node2;
        pprimary2Node2 = (PPrimary2)nodeArrayList1.get(0);

        pprimaryNode1 = new APrimary2Primary(pprimary2Node2);
        }
	nodeList.add(pprimaryNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce AIconstPrimary2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary2 pprimary2Node1;
        {
            // Block
        TIconst ticonstNode2;
        ticonstNode2 = (TIconst)nodeArrayList1.get(0);

        pprimary2Node1 = new AIconstPrimary2(ticonstNode2);
        }
	nodeList.add(pprimary2Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce ASconstPrimary2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary2 pprimary2Node1;
        {
            // Block
        TSconst tsconstNode2;
        tsconstNode2 = (TSconst)nodeArrayList1.get(0);

        pprimary2Node1 = new ASconstPrimary2(tsconstNode2);
        }
	nodeList.add(pprimary2Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce ANullPrimary2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary2 pprimary2Node1;
        {
            // Block
        TNull tnullNode2;
        tnullNode2 = (TNull)nodeArrayList1.get(0);

        pprimary2Node1 = new ANullPrimary2(tnullNode2);
        }
	nodeList.add(pprimary2Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce ATruePrimary2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary2 pprimary2Node1;
        {
            // Block
        TTrue ttrueNode2;
        ttrueNode2 = (TTrue)nodeArrayList1.get(0);

        pprimary2Node1 = new ATruePrimary2(ttrueNode2);
        }
	nodeList.add(pprimary2Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce AFalsePrimary2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary2 pprimary2Node1;
        {
            // Block
        TFalse tfalseNode2;
        tfalseNode2 = (TFalse)nodeArrayList1.get(0);

        pprimary2Node1 = new AFalsePrimary2(tfalseNode2);
        }
	nodeList.add(pprimary2Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce AParensPrimary2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary2 pprimary2Node1;
        {
            // Block
        TLparen tlparenNode2;
        PExpr pexprNode3;
        TRparen trparenNode4;
        tlparenNode2 = (TLparen)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        trparenNode4 = (TRparen)nodeArrayList3.get(0);

        pprimary2Node1 = new AParensPrimary2(tlparenNode2, pexprNode3, trparenNode4);
        }
	nodeList.add(pprimary2Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce AAcallprimary21Primary2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary2 pprimary2Node1;
        {
            // Block
        TId tidNode2;
        TLparen tlparenNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TRparen trparenNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tlparenNode3 = (TLparen)nodeArrayList2.get(0);
        trparenNode5 = (TRparen)nodeArrayList3.get(0);

        pprimary2Node1 = new ACallPrimary2(tidNode2, tlparenNode3, null, trparenNode5);
        }
	nodeList.add(pprimary2Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AAcallprimary22Primary2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary2 pprimary2Node1;
        {
            // Block
        TId tidNode2;
        TLparen tlparenNode3;
        PArglist parglistNode4;
        TRparen trparenNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tlparenNode3 = (TLparen)nodeArrayList2.get(0);
        parglistNode4 = (PArglist)nodeArrayList3.get(0);
        trparenNode5 = (TRparen)nodeArrayList4.get(0);

        pprimary2Node1 = new ACallPrimary2(tidNode2, tlparenNode3, parglistNode4, trparenNode5);
        }
	nodeList.add(pprimary2Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce AArrayrefPrimary2 */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPrimary2 pprimary2Node1;
        {
            // Block
        PArrayref parrayrefNode2;
        parrayrefNode2 = (PArrayref)nodeArrayList1.get(0);

        pprimary2Node1 = new AArrayrefPrimary2(parrayrefNode2);
        }
	nodeList.add(pprimary2Node1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce ANameArrayref */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PArrayref parrayrefNode1;
        {
            // Block
        TId tidNode2;
        TLbrack tlbrackNode3;
        PExpr pexprNode4;
        TRbrack trbrackNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tlbrackNode3 = (TLbrack)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        trbrackNode5 = (TRbrack)nodeArrayList4.get(0);

        parrayrefNode1 = new ANameArrayref(tidNode2, tlbrackNode3, pexprNode4, trbrackNode5);
        }
	nodeList.add(parrayrefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce APrimaryArrayref */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PArrayref parrayrefNode1;
        {
            // Block
        PPrimary2 pprimary2Node2;
        TLbrack tlbrackNode3;
        PExpr pexprNode4;
        TRbrack trbrackNode5;
        pprimary2Node2 = (PPrimary2)nodeArrayList1.get(0);
        tlbrackNode3 = (TLbrack)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        trbrackNode5 = (TRbrack)nodeArrayList4.get(0);

        parrayrefNode1 = new APrimaryArrayref(pprimary2Node2, tlbrackNode3, pexprNode4, trbrackNode5);
        }
	nodeList.add(parrayrefNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce AIdLhs */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLhs plhsNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        plhsNode1 = new AIdLhs(tidNode2);
        }
	nodeList.add(plhsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce AArrayrefLhs */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLhs plhsNode1;
        {
            // Block
        PArrayref parrayrefNode2;
        parrayrefNode2 = (PArrayref)nodeArrayList1.get(0);

        plhsNode1 = new AArrayrefLhs(parrayrefNode2);
        }
	nodeList.add(plhsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce AAlistarglist1Arglist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PArglist parglistNode1;
        {
            // Block
        PExpr pexprNode2;
        LinkedList listNode3 = new LinkedList();
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        {
            // Block
        }

        parglistNode1 = new AListArglist(pexprNode2, listNode3);
        }
	nodeList.add(parglistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce AAlistarglist2Arglist */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PArglist parglistNode1;
        {
            // Block
        PExpr pexprNode2;
        LinkedList listNode4 = new LinkedList();
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        parglistNode1 = new AListArglist(pexprNode2, listNode4);
        }
	nodeList.add(parglistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce AArg */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PArg pargNode1;
        {
            // Block
        TComma tcommaNode2;
        PExpr pexprNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);

        pargNode1 = new AArg(tcommaNode2, pexprNode3);
        }
	nodeList.add(pargNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce AEmptydim */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PEmptydim pemptydimNode1;
        {
            // Block
        TLbrack tlbrackNode2;
        TRbrack trbrackNode3;
        tlbrackNode2 = (TLbrack)nodeArrayList1.get(0);
        trbrackNode3 = (TRbrack)nodeArrayList2.get(0);

        pemptydimNode1 = new AEmptydim(tlbrackNode2, trbrackNode3);
        }
	nodeList.add(pemptydimNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce ATerminal$Maindecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PMaindecl pmaindeclNode1;
        pmaindeclNode1 = (PMaindecl)nodeArrayList1.get(0);
	if(pmaindeclNode1 != null)
	{
	  listNode2.add(pmaindeclNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce ANonTerminal$Maindecl */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PMaindecl pmaindeclNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmaindeclNode2 = (PMaindecl)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmaindeclNode2 != null)
	{
	  listNode3.add(pmaindeclNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce ATerminal$Stmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PStmt pstmtNode1;
        pstmtNode1 = (PStmt)nodeArrayList1.get(0);
	if(pstmtNode1 != null)
	{
	  listNode2.add(pstmtNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce ANonTerminal$Stmt */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PStmt pstmtNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pstmtNode2 = (PStmt)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pstmtNode2 != null)
	{
	  listNode3.add(pstmtNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce ATerminal$Param */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParam pparamNode1;
        pparamNode1 = (PParam)nodeArrayList1.get(0);
	if(pparamNode1 != null)
	{
	  listNode2.add(pparamNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce ANonTerminal$Param */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParam pparamNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparamNode2 = (PParam)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparamNode2 != null)
	{
	  listNode3.add(pparamNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce ATerminal$Emptydim */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PEmptydim pemptydimNode1;
        pemptydimNode1 = (PEmptydim)nodeArrayList1.get(0);
	if(pemptydimNode1 != null)
	{
	  listNode2.add(pemptydimNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce ANonTerminal$Emptydim */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PEmptydim pemptydimNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pemptydimNode2 = (PEmptydim)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pemptydimNode2 != null)
	{
	  listNode3.add(pemptydimNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce ATerminal$Arg */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PArg pargNode1;
        pargNode1 = (PArg)nodeArrayList1.get(0);
	if(pargNode1 != null)
	{
	  listNode2.add(pargNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new77() /* reduce ANonTerminal$Arg */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PArg pargNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pargNode2 = (PArg)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pargNode2 != null)
	{
	  listNode3.add(pargNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {3, SHIFT, 1}, },
			{{-1, ERROR, 1}, {2, SHIFT, 3}, },
			{{-1, ERROR, 2}, {40, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {16, SHIFT, 4}, },
			{{-1, ERROR, 4}, {37, SHIFT, 5}, },
			{{-1, REDUCE, 10}, {3, SHIFT, 6}, {38, SHIFT, 7}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 0}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 9}, {4, SHIFT, 11}, },
			{{-1, REDUCE, 10}, {3, SHIFT, 6}, {38, SHIFT, 12}, },
			{{-1, ERROR, 11}, {16, SHIFT, 14}, },
			{{-1, REDUCE, 1}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 11}, {32, SHIFT, 16}, },
			{{-1, ERROR, 15}, {16, SHIFT, 19}, },
			{{-1, ERROR, 16}, {33, SHIFT, 20}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 12}, {32, SHIFT, 16}, },
			{{-1, ERROR, 19}, {17, SHIFT, 22}, {36, SHIFT, 23}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 7}, {16, SHIFT, 14}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 24}, {18, SHIFT, 26}, },
			{{-1, ERROR, 25}, {16, SHIFT, 27}, },
			{{-1, ERROR, 26}, {37, SHIFT, 28}, },
			{{-1, REDUCE, 5}, {39, SHIFT, 29}, },
			{{-1, ERROR, 28}, {0, SHIFT, 32}, {1, SHIFT, 33}, {5, SHIFT, 34}, {6, SHIFT, 35}, {8, SHIFT, 36}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {15, SHIFT, 41}, {16, SHIFT, 42}, {17, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, {38, SHIFT, 46}, },
			{{-1, ERROR, 29}, {16, SHIFT, 14}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 6}, {39, SHIFT, 29}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 52}, },
			{{-1, ERROR, 34}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, {36, SHIFT, 65}, },
			{{-1, ERROR, 35}, {17, SHIFT, 67}, },
			{{-1, ERROR, 36}, {17, SHIFT, 68}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 55}, },
			{{-1, ERROR, 39}, {16, SHIFT, 69}, },
			{{-1, REDUCE, 53}, },
			{{-1, ERROR, 41}, {17, SHIFT, 70}, },
			{{-1, REDUCE, 45}, {16, REDUCE, 11}, {17, SHIFT, 71}, {32, SHIFT, 72}, {34, SHIFT, 73}, {35, REDUCE, 62}, },
			{{-1, ERROR, 43}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 45}, {0, SHIFT, 32}, {1, SHIFT, 33}, {5, SHIFT, 34}, {6, SHIFT, 35}, {8, SHIFT, 36}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {15, SHIFT, 41}, {16, SHIFT, 42}, {17, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, {38, SHIFT, 75}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 47}, {16, SHIFT, 77}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 49}, {36, SHIFT, 78}, },
			{{-1, REDUCE, 24}, {20, SHIFT, 79}, },
			{{-1, REDUCE, 26}, {19, SHIFT, 80}, },
			{{-1, REDUCE, 28}, {25, SHIFT, 81}, {26, SHIFT, 82}, },
			{{-1, REDUCE, 31}, {21, SHIFT, 83}, {22, SHIFT, 84}, {23, SHIFT, 85}, {24, SHIFT, 86}, },
			{{-1, REDUCE, 36}, {27, SHIFT, 87}, {28, SHIFT, 88}, },
			{{-1, REDUCE, 39}, {29, SHIFT, 89}, {30, SHIFT, 90}, {31, SHIFT, 91}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 50}, {32, SHIFT, 92}, },
			{{-1, REDUCE, 59}, {35, REDUCE, 63}, },
			{{-1, ERROR, 60}, {35, SHIFT, 93}, },
			{{-1, ERROR, 61}, {0, SHIFT, 32}, {1, SHIFT, 33}, {5, SHIFT, 34}, {6, SHIFT, 35}, {8, SHIFT, 36}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {15, SHIFT, 41}, {16, SHIFT, 42}, {17, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, {38, SHIFT, 94}, },
			{{-1, ERROR, 62}, {16, SHIFT, 96}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 45}, {17, SHIFT, 71}, {32, SHIFT, 97}, {34, SHIFT, 73}, {35, REDUCE, 62}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 66}, {36, SHIFT, 98}, },
			{{-1, ERROR, 67}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, },
			{{-1, ERROR, 68}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, },
			{{-1, ERROR, 69}, {32, SHIFT, 101}, },
			{{-1, ERROR, 70}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, },
			{{-1, ERROR, 71}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, {18, SHIFT, 103}, },
			{{-1, ERROR, 72}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, {33, SHIFT, 20}, },
			{{-1, ERROR, 73}, {14, SHIFT, 107}, },
			{{-1, ERROR, 74}, {18, SHIFT, 108}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 76}, {0, SHIFT, 32}, {1, SHIFT, 33}, {5, SHIFT, 34}, {6, SHIFT, 35}, {8, SHIFT, 36}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {15, SHIFT, 41}, {16, SHIFT, 42}, {17, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, {38, SHIFT, 109}, },
			{{-1, ERROR, 77}, {36, SHIFT, 110}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 79}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 80}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 81}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 82}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 83}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 84}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 85}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 86}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 87}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 88}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 89}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 90}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 91}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 111}, {17, SHIFT, 43}, },
			{{-1, ERROR, 92}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, },
			{{-1, ERROR, 93}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 8}, },
			{{-1, ERROR, 97}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 99}, {18, SHIFT, 128}, },
			{{-1, ERROR, 100}, {18, SHIFT, 129}, },
			{{-1, ERROR, 101}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, },
			{{-1, ERROR, 102}, {18, SHIFT, 131}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 64}, {39, SHIFT, 132}, },
			{{-1, ERROR, 105}, {18, SHIFT, 135}, },
			{{-1, ERROR, 106}, {33, SHIFT, 136}, },
			{{-1, REDUCE, 46}, {17, SHIFT, 137}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 45}, {17, SHIFT, 71}, {32, SHIFT, 97}, {34, SHIFT, 73}, },
			{{-1, REDUCE, 25}, {19, SHIFT, 80}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 27}, {25, SHIFT, 81}, {26, SHIFT, 82}, },
			{{-1, REDUCE, 29}, {21, SHIFT, 83}, {22, SHIFT, 84}, {23, SHIFT, 85}, {24, SHIFT, 86}, },
			{{-1, REDUCE, 30}, {21, SHIFT, 83}, {22, SHIFT, 84}, {23, SHIFT, 85}, {24, SHIFT, 86}, },
			{{-1, REDUCE, 32}, {27, SHIFT, 87}, {28, SHIFT, 88}, },
			{{-1, REDUCE, 33}, {27, SHIFT, 87}, {28, SHIFT, 88}, },
			{{-1, REDUCE, 35}, {27, SHIFT, 87}, {28, SHIFT, 88}, },
			{{-1, REDUCE, 34}, {27, SHIFT, 87}, {28, SHIFT, 88}, },
			{{-1, REDUCE, 37}, {29, SHIFT, 89}, {30, SHIFT, 90}, {31, SHIFT, 91}, },
			{{-1, REDUCE, 38}, {29, SHIFT, 89}, {30, SHIFT, 90}, {31, SHIFT, 91}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 126}, {33, SHIFT, 138}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 128}, {0, SHIFT, 32}, {1, SHIFT, 33}, {5, SHIFT, 34}, {6, SHIFT, 35}, {8, SHIFT, 36}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {15, SHIFT, 41}, {16, SHIFT, 42}, {17, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 129}, {0, SHIFT, 32}, {1, SHIFT, 33}, {5, SHIFT, 34}, {6, SHIFT, 35}, {8, SHIFT, 36}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {15, SHIFT, 41}, {16, SHIFT, 42}, {17, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 130}, {33, SHIFT, 141}, },
			{{-1, ERROR, 131}, {36, SHIFT, 142}, },
			{{-1, ERROR, 132}, {0, SHIFT, 32}, {1, SHIFT, 33}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {16, SHIFT, 64}, {17, SHIFT, 43}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 65}, {39, SHIFT, 132}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 60}, },
			{{-1, ERROR, 137}, {18, SHIFT, 145}, },
			{{-1, REDUCE, 61}, },
			{{-1, ERROR, 139}, {7, SHIFT, 146}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 48}, {32, SHIFT, 16}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 146}, {0, SHIFT, 32}, {1, SHIFT, 33}, {5, SHIFT, 34}, {6, SHIFT, 35}, {8, SHIFT, 36}, {9, SHIFT, 37}, {10, SHIFT, 38}, {12, SHIFT, 39}, {13, SHIFT, 40}, {15, SHIFT, 41}, {16, SHIFT, 42}, {17, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 49}, {32, SHIFT, 16}, },
			{{-1, REDUCE, 17}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 8}, {10, 13}, },
			{{-1, 24}, },
			{{-1, 30}, {31, 63}, },
			{{-1, 9}, },
			{{-1, 47}, {11, 15}, {22, 25}, {29, 62}, },
			{{-1, 48}, {61, 95}, {76, 95}, {128, 139}, {129, 140}, {146, 148}, },
			{{-1, 49}, {34, 66}, {43, 74}, {67, 99}, {68, 100}, {70, 102}, {71, 104}, {72, 106}, {92, 126}, {93, 127}, {97, 106}, {101, 130}, {132, 143}, },
			{{-1, 50}, },
			{{-1, 51}, {79, 112}, },
			{{-1, 52}, {80, 114}, },
			{{-1, 53}, {81, 115}, {82, 116}, },
			{{-1, 54}, {83, 117}, {84, 118}, {85, 119}, {86, 120}, },
			{{-1, 55}, {87, 121}, {88, 122}, },
			{{-1, 56}, {89, 123}, {90, 124}, {91, 125}, },
			{{-1, 57}, },
			{{-1, 58}, },
			{{-1, 59}, {79, 113}, {80, 113}, {81, 113}, {82, 113}, {83, 113}, {84, 113}, {85, 113}, {86, 113}, {87, 113}, {88, 113}, {89, 113}, {90, 113}, {91, 113}, },
			{{-1, 60}, },
			{{-1, 105}, },
			{{-1, 133}, {134, 144}, },
			{{-1, 17}, {18, 21}, {147, 21}, },
			{{-1, 10}, },
			{{-1, 61}, {45, 76}, },
			{{-1, 31}, },
			{{-1, 18}, {141, 147}, },
			{{-1, 134}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'public'",
			"expecting: 'class'",
			"expecting: EOF",
			"expecting: id",
			"expecting: '{'",
			"expecting: 'public', 'static', '}'",
			"expecting: 'static'",
			"expecting: id, '['",
			"expecting: ']'",
			"expecting: id, ')', '&&', '||', '<', '<=', '>', '>=', '==', '!=', '+', '-', '*', '/', '%', '[', ']', ';', ','",
			"expecting: '(', ';'",
			"expecting: id, ')'",
			"expecting: ')'",
			"expecting: ')', ','",
			"expecting: iconst, sconst, 'return', 'if', 'while', 'true', 'false', 'new', 'null', 'System.out.print', id, '(', ';', '{', '}'",
			"expecting: ')', '&&', '||', '<', '<=', '>', '>=', '==', '!=', '+', '-', '*', '/', '%', '[', ']', ';', ','",
			"expecting: iconst, sconst, 'true', 'false', 'new', 'null', id, '(', ';'",
			"expecting: '('",
			"expecting: id, '(', '&&', '||', '<', '<=', '>', '>=', '==', '!=', '+', '-', '*', '/', '%', '[', '.', '=', ';'",
			"expecting: iconst, sconst, 'true', 'false', 'new', 'null', id, '('",
			"expecting: iconst, sconst, 'return', 'if', 'else', 'while', 'true', 'false', 'new', 'null', 'System.out.print', id, '(', ';', '{', '}'",
			"expecting: ';'",
			"expecting: ')', '||', ']', ';', ','",
			"expecting: ')', '&&', '||', ']', ';', ','",
			"expecting: ')', '&&', '||', '==', '!=', ']', ';', ','",
			"expecting: ')', '&&', '||', '<', '<=', '>', '>=', '==', '!=', ']', ';', ','",
			"expecting: ')', '&&', '||', '<', '<=', '>', '>=', '==', '!=', '+', '-', ']', ';', ','",
			"expecting: ')', '&&', '||', '<', '<=', '>', '>=', '==', '!=', '+', '-', '*', '/', '%', ']', ';', ','",
			"expecting: ')', '&&', '||', '<', '<=', '>', '>=', '==', '!=', '+', '-', '*', '/', '%', '[', ']', '=', ';', ','",
			"expecting: '='",
			"expecting: '(', ')', '&&', '||', '<', '<=', '>', '>=', '==', '!=', '+', '-', '*', '/', '%', '[', ']', '.', '=', ';', ','",
			"expecting: '['",
			"expecting: iconst, sconst, 'true', 'false', 'new', 'null', id, '(', ')'",
			"expecting: iconst, sconst, 'true', 'false', 'new', 'null', id, '(', ']'",
			"expecting: 'length'",
			"expecting: '(', ')', '&&', '||', '<', '<=', '>', '>=', '==', '!=', '+', '-', '*', '/', '%', ']', ';', ','",
			"expecting: '(', ')', '&&', '||', '<', '<=', '>', '>=', '==', '!=', '+', '-', '*', '/', '%', '[', ']', '.', ';', ','",
			"expecting: ')', ']', ';', ','",
			"expecting: iconst, sconst, 'return', 'if', 'while', 'true', 'false', 'new', 'null', 'System.out.print', id, '(', ';', '{'",
			"expecting: 'else'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 6, 2, 5, 6, 5, 3, 2, 5, 7, 3, 8, 9, 7, 10, 9, 9, 11, 5, 12, 3, 4, 13, 14, 3, 13, 13, 15, 15, 16, 17, 17, 15, 15, 3, 15, 17, 18, 19, 20, 14, 5, 3, 14, 21, 22, 23, 24, 25, 26, 27, 27, 27, 15, 28, 29, 14, 3, 13, 30, 20, 21, 19, 19, 31, 19, 32, 33, 34, 12, 20, 14, 21, 20, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 5, 14, 13, 19, 20, 12, 12, 19, 12, 15, 13, 12, 8, 35, 15, 20, 20, 36, 23, 15, 24, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 27, 8, 37, 38, 38, 8, 21, 19, 13, 13, 15, 28, 12, 28, 39, 20, 15, 20, 13, 13, 27, 38, 15, 20, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
