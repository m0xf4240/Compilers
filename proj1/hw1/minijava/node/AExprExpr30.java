/* This file was generated by SableCC (http://www.sablecc.org/). */

package minijava.node;

import minijava.analysis.*;

@SuppressWarnings("nls")
public final class AExprExpr30 extends PExpr30
{
    private PExpr40 _expr40_;

    public AExprExpr30()
    {
        // Constructor
    }

    public AExprExpr30(
        @SuppressWarnings("hiding") PExpr40 _expr40_)
    {
        // Constructor
        setExpr40(_expr40_);

    }

    @Override
    public Object clone()
    {
        return new AExprExpr30(
            cloneNode(this._expr40_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExprExpr30(this);
    }

    public PExpr40 getExpr40()
    {
        return this._expr40_;
    }

    public void setExpr40(PExpr40 node)
    {
        if(this._expr40_ != null)
        {
            this._expr40_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expr40_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expr40_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expr40_ == child)
        {
            this._expr40_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expr40_ == oldChild)
        {
            setExpr40((PExpr40) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
