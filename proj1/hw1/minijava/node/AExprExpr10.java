/* This file was generated by SableCC (http://www.sablecc.org/). */

package minijava.node;

import minijava.analysis.*;

@SuppressWarnings("nls")
public final class AExprExpr10 extends PExpr10
{
    private PExpr20 _expr20_;

    public AExprExpr10()
    {
        // Constructor
    }

    public AExprExpr10(
        @SuppressWarnings("hiding") PExpr20 _expr20_)
    {
        // Constructor
        setExpr20(_expr20_);

    }

    @Override
    public Object clone()
    {
        return new AExprExpr10(
            cloneNode(this._expr20_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExprExpr10(this);
    }

    public PExpr20 getExpr20()
    {
        return this._expr20_;
    }

    public void setExpr20(PExpr20 node)
    {
        if(this._expr20_ != null)
        {
            this._expr20_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expr20_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expr20_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expr20_ == child)
        {
            this._expr20_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expr20_ == oldChild)
        {
            setExpr20((PExpr20) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
